version: '3.9'
# Defining the compose version
services:

 # Nginx server
  nginx:
 
    # Build context
    # build: nginx/Dockerfile.nginx
    image: nginx:v0.0.1
    
    # Mapping machine and container ports
    ports:
      - 80:80
      
    # Storage volumes
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    user: '0:0'
    depends_on:
      - web
    env_file:
      - .env/prod.env
    # restart: "on-failure"
    networks:
      - rfp_network

   
 # Django application
  web:
  
    # Build context
    # build: .
    image: python-node_14:v0.0.1
    container_name: web
    # # Build commands
    # command: sh -c "python manage.py makemigrations &&
    #                 python manage.py migrate &&
    #                 python manage.py collectstatic &&
    #                 gunicorn web.wsgi:application --bind 0.0.0.0:8000"
    # command: sh -c "gunicorn KPM.wsgi:application --bind 0.0.0.0:8000"
    command: sh deployment/uwsgi.sh
                    
    # Storage volumes
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    user: "0:0"
    # Exposing port 8000
    expose: 
      - "8000:8000"
    env_file:
      - .env/prod.env
    # restart: "on-failure"
    networks:
      - rfp_network

networks:
  rfp_network:
    # driver: bridge
    external: true
volumes:
  postgres_data:
  static_volume:
  media_volume: