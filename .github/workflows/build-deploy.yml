name: Build and Push Back-End Images (AZURE)

on:
  push:
    branches: [master]

jobs:
  build:
    name: Build and Push to Artifact Registry
    runs-on:
      - self-hosted
      - azure
      - dev

    env:
      IMAGE_NAME_1: python-node_14
      IMAGE_NAME_2: nginx
      VERSION: v0.0.1
      REGISTRY_NAME: rfpbuildercontainer

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Azure Container Registry Login"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Update Env Files
        run: |
          echo ${{ secrets.DB_ENGINE }} ${{secrets.DB_USERNAME}} ${{secrets.DB_PW}} ${{secrets.DB_HOST}} ${{secrets.DB_NAME}} ${{secrets.DB_PORT}} 
          # sh deployment/update_envfile.sh ${{ secrets.DB_ENGINE }} ${{secrets.DB_USERNAME}} ${{secrets.DB_PW}} ${{secrets.DB_HOST}} ${{secrets.DB_NAME}} ${{secrets.DB_PORT}}

          deployment/update_envfile.cmd ${{ secrets.DB_ENGINE }} ${{secrets.DB_USERNAME}} ${{secrets.DB_PW}} ${{secrets.DB_HOST}} ${{secrets.DB_NAME}} ${{secrets.DB_PORT}}

      - name: Build Docker Image
        run: |
          # docker build --no-cache -t ${{env.IMAGE_NAME_1}}:${{env.VERSION}} -f Dockerfile .
          # docker tag ${{env.IMAGE_NAME_1}}:${{env.VERSION}} ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_NAME_1}}:${{env.VERSION}}
          # docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_NAME_1}}:${{env.VERSION}}

          cd nginx
          docker build --no-cache -t ${{env.IMAGE_NAME_2}}:${{env.VERSION}} -f Dockerfile.nginx .
          docker tag ${{env.IMAGE_NAME_2}}:${{env.VERSION}} ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_NAME_2}}:${{env.VERSION}}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{env.IMAGE_NAME_2}}:${{env.VERSION}}
          cd ..

      - name: Run Docker-Compose Commands
        run: |
          docker compose -f docker-compose-prod.yml down
          docker compose -f docker-compose-prod.yml up -d --build --remove-orphans
