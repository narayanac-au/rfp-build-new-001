version: "3"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    command: gunicorn KPM.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - .env/prod.env
  
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 1337:80
    depends_on:
      - web
  # web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.python
  #   image: python_django:v0.0.1
  #   container_name: django_app_container
  #   restart: always
  #   # build: ./web
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - web-django:/usr/src/app
  #     - web-static:/usr/src/app/static
  #   # env_file: .env
  #   environment:
  #     DEBUG: 'true'
  #   command: /usr/local/bin/gunicorn docker_django.wsgi:application -w 2 -b :8000
  #   networks:
  #     - rfp_network
  
  # node:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.node
  #   image: node_base:v0.0.1
  #   # volumes:
  #   #   - '.:/usr/src/app'
  #   #   - '/usr/src/app/node_modules'
  #   ports:
  #     - '4200:4200'
  #   networks:
  #     - rfp_network
  #   container_name: node_js_container

# networks:
#   rfp_network:
#     # driver: bridge
#     external: true
volumes:
  postgres_data:
  static_volume:
  media_volume:
